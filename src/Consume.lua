---
---
--- A program meant to completely consume a large area of land, customizable with variables
---

--- First the variables
consumeLength = 64 --- The length of the consume
consumeWidth = 64 --- The width of the consume
consumeHeight = 6 --- The height, in sets of 3
direction = 1 --- Which direction relative to where the turtle is facing do you want it to progress,
direction2 = 1 --- Which direction, but up and down instead
--- d = left = 0, right = 1
--- d2 = down = 0, up = 1


--- Then I define the functions, starting with deposit, these are mostly the same as with Tunnel
function deposit ()
    --- It makes sure slot 1 is selected, which should hold the remote chest, and then places it below itself
    turtle.select(1)
    turtle.placeDown()
    --- It then sets the variable for the repeat block to go through the inventory
    a = 16
    repeat
        --- It selects the next slot, and puts the items into the chest below
        turtle.select(a)
        turtle.dropDown()
        a = a -1
    until a == 1
    --- Finally it makes sure the first slot is selected, and picks the chest back up
    turtle.select(1)
    turtle.digDown()
end

--- Then I define the refuel function
function refuel()
    --- Select the refuel chest and place it
    turtle.select(2)
    turtle.placeDown()
    --- Take the fuel out and refuel
    turtle.suckDown()
    turtle.refuel()
    --- Dig the refuel chest back up and then select the first slot
    turtle.digDown()
    turtle.select(1)
end

--- Then I define the dig function
function dig (length)
    --- A repeat block that will go for the length of the parameter variable
    repeat
        --- First it digs in front of itself, then moves into the hole it dug and digs above and below
        turtle.dig()
        --- This is to stop gravel from breaking things
        while turtle.detect() do
            turtle.dig()
        end
        turtle.forward()
        turtle.digUp()
        turtle.digDown()
        --- Then it checks if it's inventory is full or not
        if turtle.getItemCount(16) > 0 then
            --- If it is full then it deposits it's items
            deposit()
        end
        --- Finally it makes sure the first slot is selected, and  decrements the length count by 1
        turtle.select(1)
        length = length - 1
    until length == 0
end

--- Then the turn function
function turn()
    if direction == 0 then
        turtle.turnLeft()
        dig(1)
        turtle.turnLeft()
        direction = 1
    elseif direction == 1 then
        turtle.turnRight()
        dig(1)
        turtle.turnRight()
        direction = 0
    end
end



---
---
---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jonathan.
--- DateTime: 24/05/2021 15:11
---